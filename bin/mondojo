#!perl

use strict;
use warnings;

use Mojolicious::Lite;
use Business::Mondo;
use Business::Mondo::Transaction;
use HTML::GoogleMaps::V3;
use Mojo::JSON qw/ decode_json /;
use File::Slurper qw/ read_text /;

$ENV{MOJO_LOG_LEVEL} = 'debug';

get '/' => sub {
	my ( $c ) = @_;

	return $c->render( json => [
		map { { $_->to_hash } } _get_transactions()
	] );
};

get '/map' => sub {
	my ( $c ) = @_;

	my $map = HTML::GoogleMaps::V3->new(
		zoom => 4,
	);

	# TODO: get user's current location
	$map->center( 'Paris' );

	foreach my $t ( _get_transactions() ) {
		if ( my $m = $t->merchant ) {
			if ( my $addr = $m->address ) {
				$map->add_marker(
					html  => $c->render_to_string(
						'marker',
						merchant => $m,
					),
					point => [ $addr->longitude,$addr->latitude ]
				);
			}
		}
	}

	my ( $head,$map_div ) = $map->onload_render;

	$c->render(
		template => 'map',
		head     => $head,
		map      => $map_div,
	);
};

app->start;

sub _get_transactions {

	my $data;
	my $mondo = Business::Mondo->new(
		token => $ENV{MONDOJO_TOKEN}
	);

	if ( my $file = $ENV{MONDOJO_TEST_FILE} ) {
		$data = decode_json(
			Encode::encode( 'UTF-8',read_text( $file ) )
		);
	} else {
		return {};
	}

	my @objects;

	foreach my $e ( @{ $data->{transactions} // [] } ) {
		push( @objects,Business::Mondo::Transaction->new(
			%{ $e },
			client => $mondo->client,
		) );
	}

	return @objects;
}

__DATA__
@@ map.html.ep
<html>
	<head>
		<%== $head %>
	</head>
	<body onload="html_googlemaps_initialize()">
		<%== $map %>
	</body>
</html>

@@ marker.html.ep
<div class="merchant_emoji">
	<%== $merchant->emoji %>
</div>
